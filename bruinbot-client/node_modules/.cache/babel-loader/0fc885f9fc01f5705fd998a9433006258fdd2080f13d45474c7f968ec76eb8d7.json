{"ast":null,"code":"// import { useState, useEffect } from \"react\";\n// import { Container, Row, Col } from \"react-bootstrap\";\n// import headerImg from \"../assets/headerImg.png\";\n// import { ArrowRightCircle } from 'react-bootstrap-icons';\n// import 'animate.css';\n// import TrackVisibility from 'react-on-screen';\n\n// export const Banner = () => {\n//   const [loopNum, setLoopNum] = useState(0);\n//   const [isDeleting, setIsDeleting] = useState(false);\n//   const [text, setText] = useState('');\n//   const [delta, setDelta] = useState(300 - Math.random() * 100);\n//   const [index, setIndex] = useState(1);\n//   const toRotate = [ \"Web Developer\", \"Web Designer\", \"UI/UX Designer\" ];\n//   const period = 2000;\n\n//   useEffect(() => {\n//     let ticker = setInterval(() => {\n//       tick();\n//     }, delta);\n\n//     return () => { clearInterval(ticker) };\n//   }, [text])\n\n//   const tick = () => {\n//     let i = loopNum % toRotate.length;\n//     let fullText = toRotate[i];\n//     let updatedText = isDeleting ? fullText.substring(0, text.length - 1) : fullText.substring(0, text.length + 1);\n\n//     setText(updatedText);\n\n//     if (isDeleting) {\n//       setDelta(prevDelta => prevDelta / 2);\n//     }\n\n//     if (!isDeleting && updatedText === fullText) {\n//       setIsDeleting(true);\n//       setIndex(prevIndex => prevIndex - 1);\n//       setDelta(period);\n//     } else if (isDeleting && updatedText === '') {\n//       setIsDeleting(false);\n//       setLoopNum(loopNum + 1);\n//       setIndex(1);\n//       setDelta(500);\n//     } else {\n//       setIndex(prevIndex => prevIndex + 1);\n//     }\n//   }\n\n//   return (\n//     <section className=\"banner\" id=\"home\">\n//       <Container>\n//         <Row className=\"aligh-items-center\">\n//           <Col xs={12} md={6} xl={7}>\n//             <TrackVisibility>\n//               {({ isVisible }) =>\n//               <div className={isVisible ? \"animate__animated animate__fadeIn\" : \"\"}>\n//                 <span className=\"tagline\">Welcome to my Portfolio</span>\n//                 <h1>{`Hi! I'm Judy`} <span className=\"txt-rotate\" dataPeriod=\"1000\" data-rotate='[ \"Web Developer\", \"Web Designer\", \"UI/UX Designer\" ]'><span className=\"wrap\">{text}</span></span></h1>\n//                   <p>Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book.</p>\n//                   <button onClick={() => console.log('connect')}>Let’s Connect <ArrowRightCircle size={25} /></button>\n//               </div>}\n//             </TrackVisibility>\n//           </Col>\n//           <Col xs={12} md={6} xl={5}>\n//             <TrackVisibility>\n//               {({ isVisible }) =>\n//                 <div className={isVisible ? \"animate__animated animate__zoomIn\" : \"\"}>\n//                   <img src={headerImg} alt=\"Header Img\"/>\n//                 </div>}\n//             </TrackVisibility>\n//           </Col>\n//         </Row>\n//       </Container>\n//     </section>\n//   )\n// }\n\n// import{useState, useEffect} from \"react\"\n// import {Container, Row, Col} from \"react-bootstrap\"\n// import {ArrowRightCircle} from \"react-bootstrap-icons\"\n// import headerImg from \"../assets/headerImg.png\"\n\n// export const Banner = () => {\n//     const[loopNum, setLoopNum] = useState(0);\n//     const[isDeleting, setIsDeleting] = useState(false);\n//     const toRotate=[\"8 AMs\", \"Friday Classes\", \"stress\"];\n//     const[text, setText] = useState(\"\");\n//     const period = 2000;\n//     const[delta, setDelta] = useState(300 - Math.random() * 100) // determine how fast letter comes after \n\n//     useEffect(() => {\n//         let ticker = setInterval(() => {\n//           tick();\n//         }, delta);\n\n//         return () => { clearInterval(ticker) };\n//       }, [text])\n\n//       const tick = () => {\n//         let i = loopNum % toRotate.length;\n//         let fullText = toRotate[i];\n//         let updatedText = isDeleting ? fullText.substring(0, text.length - 1) : fullText.substring(0, text.length + 1);\n\n//         setText(updatedText);\n\n//         if (isDeleting) {\n//           setDelta(prevDelta => prevDelta / 2);\n//         }\n\n//         if (!isDeleting && updatedText === fullText) {\n//           setIsDeleting(true);\n//           setDelta(period);\n//         } else if (isDeleting && updatedText === '') {\n//           setIsDeleting(false);\n//           setLoopNum(loopNum + 1);\n//           setDelta(500);\n//         } \n//       }\n\n//     return(\n//         <section className=\"banner\" id=\"home\">\n//             <Container className=\"align-items-center\">\n//                 <Row>\n//                     <Col xs={12} md={6} xl={7}>\n//                     <span className=\"tagline\">BruinBot</span>\n//                     <h1>{`Say No to `}<span className=\"wrap\">{text}</span></h1>\n//                     <button onClick={() => {console.log('starting')}}>Get Started!<ArrowRightCircle size={25}/></button>\n//                     </Col>\n//                     <Col xs={12} md={6} xl={7}>\n//                     <img src={headerImg} alt=\"Bear\"></img>\n//                     </Col>\n//                 </Row>\n//             </Container>\n\n//         </section>\n//     )\n// }","map":{"version":3,"names":[],"sources":["/Users/ananyaanand/Desktop/bruinbot/src/components/Banner.js"],"sourcesContent":["// import { useState, useEffect } from \"react\";\n// import { Container, Row, Col } from \"react-bootstrap\";\n// import headerImg from \"../assets/headerImg.png\";\n// import { ArrowRightCircle } from 'react-bootstrap-icons';\n// import 'animate.css';\n// import TrackVisibility from 'react-on-screen';\n\n// export const Banner = () => {\n//   const [loopNum, setLoopNum] = useState(0);\n//   const [isDeleting, setIsDeleting] = useState(false);\n//   const [text, setText] = useState('');\n//   const [delta, setDelta] = useState(300 - Math.random() * 100);\n//   const [index, setIndex] = useState(1);\n//   const toRotate = [ \"Web Developer\", \"Web Designer\", \"UI/UX Designer\" ];\n//   const period = 2000;\n\n//   useEffect(() => {\n//     let ticker = setInterval(() => {\n//       tick();\n//     }, delta);\n\n//     return () => { clearInterval(ticker) };\n//   }, [text])\n\n//   const tick = () => {\n//     let i = loopNum % toRotate.length;\n//     let fullText = toRotate[i];\n//     let updatedText = isDeleting ? fullText.substring(0, text.length - 1) : fullText.substring(0, text.length + 1);\n\n//     setText(updatedText);\n\n//     if (isDeleting) {\n//       setDelta(prevDelta => prevDelta / 2);\n//     }\n\n//     if (!isDeleting && updatedText === fullText) {\n//       setIsDeleting(true);\n//       setIndex(prevIndex => prevIndex - 1);\n//       setDelta(period);\n//     } else if (isDeleting && updatedText === '') {\n//       setIsDeleting(false);\n//       setLoopNum(loopNum + 1);\n//       setIndex(1);\n//       setDelta(500);\n//     } else {\n//       setIndex(prevIndex => prevIndex + 1);\n//     }\n//   }\n\n//   return (\n//     <section className=\"banner\" id=\"home\">\n//       <Container>\n//         <Row className=\"aligh-items-center\">\n//           <Col xs={12} md={6} xl={7}>\n//             <TrackVisibility>\n//               {({ isVisible }) =>\n//               <div className={isVisible ? \"animate__animated animate__fadeIn\" : \"\"}>\n//                 <span className=\"tagline\">Welcome to my Portfolio</span>\n//                 <h1>{`Hi! I'm Judy`} <span className=\"txt-rotate\" dataPeriod=\"1000\" data-rotate='[ \"Web Developer\", \"Web Designer\", \"UI/UX Designer\" ]'><span className=\"wrap\">{text}</span></span></h1>\n//                   <p>Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book.</p>\n//                   <button onClick={() => console.log('connect')}>Let’s Connect <ArrowRightCircle size={25} /></button>\n//               </div>}\n//             </TrackVisibility>\n//           </Col>\n//           <Col xs={12} md={6} xl={5}>\n//             <TrackVisibility>\n//               {({ isVisible }) =>\n//                 <div className={isVisible ? \"animate__animated animate__zoomIn\" : \"\"}>\n//                   <img src={headerImg} alt=\"Header Img\"/>\n//                 </div>}\n//             </TrackVisibility>\n//           </Col>\n//         </Row>\n//       </Container>\n//     </section>\n//   )\n// }\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// import{useState, useEffect} from \"react\"\n// import {Container, Row, Col} from \"react-bootstrap\"\n// import {ArrowRightCircle} from \"react-bootstrap-icons\"\n// import headerImg from \"../assets/headerImg.png\"\n\n// export const Banner = () => {\n//     const[loopNum, setLoopNum] = useState(0);\n//     const[isDeleting, setIsDeleting] = useState(false);\n//     const toRotate=[\"8 AMs\", \"Friday Classes\", \"stress\"];\n//     const[text, setText] = useState(\"\");\n//     const period = 2000;\n//     const[delta, setDelta] = useState(300 - Math.random() * 100) // determine how fast letter comes after \n\n//     useEffect(() => {\n//         let ticker = setInterval(() => {\n//           tick();\n//         }, delta);\n    \n//         return () => { clearInterval(ticker) };\n//       }, [text])\n    \n//       const tick = () => {\n//         let i = loopNum % toRotate.length;\n//         let fullText = toRotate[i];\n//         let updatedText = isDeleting ? fullText.substring(0, text.length - 1) : fullText.substring(0, text.length + 1);\n    \n//         setText(updatedText);\n    \n//         if (isDeleting) {\n//           setDelta(prevDelta => prevDelta / 2);\n//         }\n    \n//         if (!isDeleting && updatedText === fullText) {\n//           setIsDeleting(true);\n//           setDelta(period);\n//         } else if (isDeleting && updatedText === '') {\n//           setIsDeleting(false);\n//           setLoopNum(loopNum + 1);\n//           setDelta(500);\n//         } \n//       }\n    \n\n//     return(\n//         <section className=\"banner\" id=\"home\">\n//             <Container className=\"align-items-center\">\n//                 <Row>\n//                     <Col xs={12} md={6} xl={7}>\n//                     <span className=\"tagline\">BruinBot</span>\n//                     <h1>{`Say No to `}<span className=\"wrap\">{text}</span></h1>\n//                     <button onClick={() => {console.log('starting')}}>Get Started!<ArrowRightCircle size={25}/></button>\n//                     </Col>\n//                     <Col xs={12} md={6} xl={7}>\n//                     <img src={headerImg} alt=\"Bear\"></img>\n//                     </Col>\n//                 </Row>\n//             </Container>\n\n\n//         </section>\n//     )\n// }"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAgBA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}