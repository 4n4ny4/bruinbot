{"ast":null,"code":"var _jsxFileName = \"/Users/ananyaanand/Desktop/bruinbot/src/components/Banner.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport { Container, Row, Col } from \"react-bootstrap\";\nimport headerImg from \"../assets/headerImg.png\";\nimport { ArrowRightCircle } from 'react-bootstrap-icons';\nimport TrackVisibility from 'react-on-screen';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Banner = () => {\n  _s();\n  const [loopNum, setLoopNum] = useState(0);\n  const [isDeleting, setIsDeleting] = useState(false);\n  const [text, setText] = useState('');\n  const [delta, setDelta] = useState(300 - Math.random() * 100);\n  const toRotate = [\"Web Developer\", \"Web Designer\", \"UI/UX Designer\"];\n  const period = 2000;\n  useEffect(() => {\n    let ticker = setInterval(() => {\n      tick();\n    }, delta);\n    return () => {\n      clearInterval(ticker);\n    };\n  }, [text]);\n  const tick = () => {\n    let i = loopNum % toRotate.length;\n    let fullText = toRotate[i];\n    let updatedText = isDeleting ? fullText.substring(0, text.length - 1) : fullText.substring(0, text.length + 1);\n    setText(updatedText);\n    if (isDeleting) {\n      setDelta(prevDelta => prevDelta / 2);\n    }\n    if (!isDeleting && updatedText === fullText) {\n      setIsDeleting(true);\n      setDelta(period);\n    } else if (isDeleting && updatedText === '') {\n      setIsDeleting(false);\n      setLoopNum(loopNum + 1);\n      setIndex(1);\n      setDelta(500);\n    } else {\n      setIndex(prevIndex => prevIndex + 1);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"banner\",\n    id: \"home\",\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      children: /*#__PURE__*/_jsxDEV(Row, {\n        className: \"aligh-items-center\",\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          xs: 12,\n          md: 6,\n          xl: 7,\n          children: /*#__PURE__*/_jsxDEV(TrackVisibility, {\n            children: ({\n              isVisible\n            }) => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: isVisible ? \"animate__animated animate__fadeIn\" : \"\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"tagline\",\n                children: \"Welcome to my Portfolio\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 55,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n                children: [`Hi! I'm Judy`, \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"txt-rotate\",\n                  dataPeriod: \"1000\",\n                  \"data-rotate\": \"[ \\\"Web Developer\\\", \\\"Web Designer\\\", \\\"UI/UX Designer\\\" ]\",\n                  children: /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"wrap\",\n                    children: text\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 56,\n                    columnNumber: 153\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 56,\n                  columnNumber: 38\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 56,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 57,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => console.log('connect'),\n                children: [\"Let\\u2019s Connect \", /*#__PURE__*/_jsxDEV(ArrowRightCircle, {\n                  size: 25\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 58,\n                  columnNumber: 80\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 58,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          xs: 12,\n          md: 6,\n          xl: 5,\n          children: /*#__PURE__*/_jsxDEV(TrackVisibility, {\n            children: ({\n              isVisible\n            }) => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: isVisible ? \"animate__animated animate__zoomIn\" : \"\",\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: headerImg,\n                alt: \"Header Img\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 66,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n};\n\n// import{useState, useEffect} from \"react\"\n// import {Container, Row, Col} from \"react-bootstrap\"\n// import {ArrowRightCircle} from \"react-bootstrap-icons\"\n// import headerImg from \"../assets/headerImg.png\"\n\n// export const Banner = () => {\n//     const[loopNum, setLoopNum] = useState(0);\n//     const[isDeleting, setIsDeleting] = useState(false);\n//     const toRotate=[\"8 AMs\", \"Friday Classes\", \"stress\"];\n//     const[text, setText] = useState(\"\");\n//     const period = 2000;\n//     const[delta, setDelta] = useState(300 - Math.random() * 100) // determine how fast letter comes after \n\n//     useEffect(() => {\n//         let ticker = setInterval(() => {\n//           tick();\n//         }, delta);\n\n//         return () => { clearInterval(ticker) };\n//       }, [text])\n\n//       const tick = () => {\n//         let i = loopNum % toRotate.length;\n//         let fullText = toRotate[i];\n//         let updatedText = isDeleting ? fullText.substring(0, text.length - 1) : fullText.substring(0, text.length + 1);\n\n//         setText(updatedText);\n\n//         if (isDeleting) {\n//           setDelta(prevDelta => prevDelta / 2);\n//         }\n\n//         if (!isDeleting && updatedText === fullText) {\n//           setIsDeleting(true);\n//           setDelta(period);\n//         } else if (isDeleting && updatedText === '') {\n//           setIsDeleting(false);\n//           setLoopNum(loopNum + 1);\n//           setDelta(500);\n//         } \n//       }\n\n//     return(\n//         <section className=\"banner\" id=\"home\">\n//             <Container className=\"align-items-center\">\n//                 <Row>\n//                     <Col xs={12} md={6} xl={7}>\n//                     <span className=\"tagline\">BruinBot</span>\n//                     <h1>{`Say No to `}<span className=\"wrap\">{text}</span></h1>\n//                     <button onClick={() => {console.log('starting')}}>Get Started!<ArrowRightCircle size={25}/></button>\n//                     </Col>\n//                     <Col xs={12} md={6} xl={7}>\n//                     <img src={headerImg} alt=\"Bear\"></img>\n//                     </Col>\n//                 </Row>\n//             </Container>\n\n//         </section>\n//     )\n// }\n_s(Banner, \"mMUCaxT9Zkzi6UyxtZ51goTRse0=\");\n_c = Banner;\nvar _c;\n$RefreshReg$(_c, \"Banner\");","map":{"version":3,"names":["useState","useEffect","Container","Row","Col","headerImg","ArrowRightCircle","TrackVisibility","jsxDEV","_jsxDEV","Banner","_s","loopNum","setLoopNum","isDeleting","setIsDeleting","text","setText","delta","setDelta","Math","random","toRotate","period","ticker","setInterval","tick","clearInterval","i","length","fullText","updatedText","substring","prevDelta","setIndex","prevIndex","className","id","children","xs","md","xl","isVisible","fileName","_jsxFileName","lineNumber","columnNumber","dataPeriod","onClick","console","log","size","src","alt","_c","$RefreshReg$"],"sources":["/Users/ananyaanand/Desktop/bruinbot/src/components/Banner.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\nimport { Container, Row, Col } from \"react-bootstrap\";\nimport headerImg from \"../assets/headerImg.png\";\nimport { ArrowRightCircle } from 'react-bootstrap-icons';\nimport TrackVisibility from 'react-on-screen';\n\nexport const Banner = () => {\n  const [loopNum, setLoopNum] = useState(0);\n  const [isDeleting, setIsDeleting] = useState(false);\n  const [text, setText] = useState('');\n  const [delta, setDelta] = useState(300 - Math.random() * 100);\n  const toRotate = [ \"Web Developer\", \"Web Designer\", \"UI/UX Designer\" ];\n  const period = 2000;\n\n  useEffect(() => {\n    let ticker = setInterval(() => {\n      tick();\n    }, delta);\n\n    return () => { clearInterval(ticker) };\n  }, [text])\n\n  const tick = () => {\n    let i = loopNum % toRotate.length;\n    let fullText = toRotate[i];\n    let updatedText = isDeleting ? fullText.substring(0, text.length - 1) : fullText.substring(0, text.length + 1);\n\n    setText(updatedText);\n\n    if (isDeleting) {\n      setDelta(prevDelta => prevDelta / 2);\n    }\n\n    if (!isDeleting && updatedText === fullText) {\n      setIsDeleting(true);\n      setDelta(period);\n    } else if (isDeleting && updatedText === '') {\n      setIsDeleting(false);\n      setLoopNum(loopNum + 1);\n      setIndex(1);\n      setDelta(500);\n    } else {\n      setIndex(prevIndex => prevIndex + 1);\n    }\n  }\n\n  return (\n    <section className=\"banner\" id=\"home\">\n      <Container>\n        <Row className=\"aligh-items-center\">\n          <Col xs={12} md={6} xl={7}>\n            <TrackVisibility>\n              {({ isVisible }) =>\n              <div className={isVisible ? \"animate__animated animate__fadeIn\" : \"\"}>\n                <span className=\"tagline\">Welcome to my Portfolio</span>\n                <h1>{`Hi! I'm Judy`} <span className=\"txt-rotate\" dataPeriod=\"1000\" data-rotate='[ \"Web Developer\", \"Web Designer\", \"UI/UX Designer\" ]'><span className=\"wrap\">{text}</span></span></h1>\n                  <p>Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book.</p>\n                  <button onClick={() => console.log('connect')}>Let’s Connect <ArrowRightCircle size={25} /></button>\n              </div>}\n            </TrackVisibility>\n          </Col>\n          <Col xs={12} md={6} xl={5}>\n            <TrackVisibility>\n              {({ isVisible }) =>\n                <div className={isVisible ? \"animate__animated animate__zoomIn\" : \"\"}>\n                  <img src={headerImg} alt=\"Header Img\"/>\n                </div>}\n            </TrackVisibility>\n          </Col>\n        </Row>\n      </Container>\n    </section>\n  )\n}\n\n\n// import{useState, useEffect} from \"react\"\n// import {Container, Row, Col} from \"react-bootstrap\"\n// import {ArrowRightCircle} from \"react-bootstrap-icons\"\n// import headerImg from \"../assets/headerImg.png\"\n\n// export const Banner = () => {\n//     const[loopNum, setLoopNum] = useState(0);\n//     const[isDeleting, setIsDeleting] = useState(false);\n//     const toRotate=[\"8 AMs\", \"Friday Classes\", \"stress\"];\n//     const[text, setText] = useState(\"\");\n//     const period = 2000;\n//     const[delta, setDelta] = useState(300 - Math.random() * 100) // determine how fast letter comes after \n\n//     useEffect(() => {\n//         let ticker = setInterval(() => {\n//           tick();\n//         }, delta);\n    \n//         return () => { clearInterval(ticker) };\n//       }, [text])\n    \n//       const tick = () => {\n//         let i = loopNum % toRotate.length;\n//         let fullText = toRotate[i];\n//         let updatedText = isDeleting ? fullText.substring(0, text.length - 1) : fullText.substring(0, text.length + 1);\n    \n//         setText(updatedText);\n    \n//         if (isDeleting) {\n//           setDelta(prevDelta => prevDelta / 2);\n//         }\n    \n//         if (!isDeleting && updatedText === fullText) {\n//           setIsDeleting(true);\n//           setDelta(period);\n//         } else if (isDeleting && updatedText === '') {\n//           setIsDeleting(false);\n//           setLoopNum(loopNum + 1);\n//           setDelta(500);\n//         } \n//       }\n    \n\n//     return(\n//         <section className=\"banner\" id=\"home\">\n//             <Container className=\"align-items-center\">\n//                 <Row>\n//                     <Col xs={12} md={6} xl={7}>\n//                     <span className=\"tagline\">BruinBot</span>\n//                     <h1>{`Say No to `}<span className=\"wrap\">{text}</span></h1>\n//                     <button onClick={() => {console.log('starting')}}>Get Started!<ArrowRightCircle size={25}/></button>\n//                     </Col>\n//                     <Col xs={12} md={6} xl={7}>\n//                     <img src={headerImg} alt=\"Bear\"></img>\n//                     </Col>\n//                 </Row>\n//             </Container>\n\n\n//         </section>\n//     )\n// }"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}